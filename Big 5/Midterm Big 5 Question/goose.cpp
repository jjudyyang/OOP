//consider the following goose class 
struct Goose{
    int wingspan;
    int height;
};

//group of geese
struct Gaggle{
    Goose head;
    Gaggle *rest;
};

//v shape
struct VFormation{
    Goose leader;
    Gaggle *left;
    Gaggle *right;
};

// don't need to implement big 5 because default ones are already generated by compiler

//copy constructor for VFormation
VFormation::VFormation( const VFormation &other){
    leader = other.leader;
    //must check if it is a null ptr
    left = other.left ? new Gaggle( other.left ) : nullptr;
    right = other.right ? new Gaggle( other.right ) : nullptr;
}

//write move assignment for VFormation
VFormation &VFormation::operator=(VFormation && other){
    using std::swap;
    swap(leader, other.leader);
    swap(left, other.left);
    swap(right, other.right);
    return *this; // returns the object
}


